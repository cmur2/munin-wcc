#!/usr/bin/env ruby

#
# Example config:
#  [wcc_*]
#  env.wcc_stats_file /my/custom/path
#

require 'yaml'

WCC_STATS_FILE = "/var/tmp/wcc/stats.yml"

script = File.basename($0)
@mode = script.gsub('wcc_', '')
@cmd = ARGV[0]

def echo_runs()
	case @cmd
	when 'config'
		puts "graph_title wcc runs"
		# TODO: as COUNTER without reset to zero?
		puts "graph_args --lower-limit 0"
		puts "graph_vlabel runs"
		puts "graph_category wcc"
		#puts "graph_scale yes"
		puts "graph_info This graph shows the number of wcc runs since last query."
		puts "nruns.label runs"
		puts "nruns.info Number of wcc runs."
		puts "nruns.type GAUGE"
	else
		puts "nruns.value #{@stats['nruns']}"
		@stats['nruns'] = 0
		File.open(@stats_file, 'w+') do |f| YAML.dump({"stats" => @stats}, f) end
	end
end

def echo_update()
	case @cmd
	when 'config'
		puts "graph_title wcc events"
		puts "graph_args --lower-limit 0"
		puts "graph_vlabel events"
		puts "graph_category wcc"
		puts "graph_order nsites nnotifications nerrors"
		#puts "graph_scale yes"
		puts "graph_info This graph shows 'events' that happened in wcc since last query."
		puts "nsites.label sites"
		puts "nsites.info Detected site changes"
		puts "nsites.type GAUGE"
		puts "nsites.draw AREA"
		puts "nnotifications.label notifications"
		puts "nnotifications.info Sent notifications by wcc's noticator plugins"
		puts "nnotifications.type GAUGE"
		puts "nnotifications.draw STACK"
		puts "nerrors.label errors"
		puts "nerrors.info Errors found on site fetch"
		puts "nerrors.type GAUGE"
		puts "nerrors.draw STACK"
		puts "nerrors.colour ff0000"
	else
		puts "nsites.value #{@stats['nsites']}"
		puts "nnotifications.value #{@stats['nnotifications']}"
		puts "nerrors.value #{@stats['nerrors']}"
		@stats['nsites'] = 0
		@stats['nnotifications'] = 0
		@stats['nerrors'] = 0
		File.open(@stats_file, 'w+') do |f| YAML.dump({"stats" => @stats}, f) end
	end
end

def echo_changes()
	case @cmd
	when 'config'
		puts "graph_title wcc changes"
		puts "graph_args --lower-limit 0"
		puts "graph_vlabel changes"
		puts "graph_category wcc"
		puts "graph_order nlines nhunks"
		#puts "graph_scale yes"
		puts "graph_info This graph shows the total amount of changes detected by wcc since last query."
		puts "nlines.label lines"
		puts "nlines.info Number of lines changed."
		puts "nlines.type GAUGE"
		puts "nhunks.label changesets"
		puts "nhunks.info Number of changesets."
		puts "nhunks.type GAUGE"
	else
		puts "nlines.value #{@stats['nlines']}"
		puts "nhunks.value #{@stats['nhunks']}"
		@stats['nlines'] = 0
		@stats['nhunks'] = 0
		File.open(@stats_file, 'w+') do |f| YAML.dump({"stats" => @stats}, f) end
	end
end

# open stderr
$stderr = IO.new(2, "w")

@stats_file = ENV['wcc_stats_file'] || WCC_STATS_FILE
if File.exists?(@stats_file)
	yaml = YAML.load_file(@stats_file)
	if not yaml
		$stderr.puts "Could not read wcc stats file #{@stats_file}! File is empty."
		exit 2
	else
		@stats = yaml['stats']
	end
else
	$stderr.puts "Could not find wcc stats file #{@stats_file}! File does not exist."
	exit 1
end

case @mode
when 'runs'
	echo_runs()
when 'update'
	echo_update()
when 'changes'
	echo_changes()
else
	$stderr.puts "Unknown mode #{@mode} for wcc_!"
	exit 3
end
